# ClashLink Docker Compose 配置
# 用于本地开发和生产部署的容器编排

version: '3.8'

services:
  # ClashLink 主应用服务
  clashlink:
    # 使用 Docker Hub 镜像
    image: uttogg/clashlink:${VERSION:-latest}
    
    # 容器名称
    container_name: clashlink-app
    
    # 重启策略：除非手动停止，否则总是重启
    restart: unless-stopped
    
    # 端口映射：宿主机8080端口映射到容器8080端口
    ports:
      - "8080:8080"
    
    # 数据卷挂载 - 实现数据持久化
    volumes:
      # SQLite 数据库文件持久化
      - ./data/database:/app/backend:rw
      # 生成的订阅配置文件持久化  
      - ./data/subscriptions:/app/subscriptions:rw
      # 应用日志持久化
      - ./data/logs:/app/logs:rw
    
    # 确保数据目录在启动前创建
    # 注意: 在生产环境中，建议手动创建这些目录并设置正确权限
    command: >
      sh -c "
        mkdir -p /app/backend /app/subscriptions /app/logs &&
        chmod 755 /app/backend /app/subscriptions /app/logs &&
        chown -R clashlink:clashlink /app/backend /app/subscriptions /app/logs &&
        ./clashlink
      "
    
    # 环境变量配置
    environment:
      # 应用运行模式
      - GIN_MODE=release
      # 时区设置
      - TZ=Asia/Shanghai
      # JWT 密钥（生产环境应该从外部文件或环境变量读取）
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-in-production}
      # 数据库路径
      - DB_PATH=/app/backend/data.db
      # 订阅文件存储路径
      - SUBSCRIPTION_PATH=/app/subscriptions
      # 日志级别
      - LOG_LEVEL=${LOG_LEVEL:-info}
    
    # 健康检查配置
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # 资源限制（可选）
    deploy:
      resources:
        limits:
          # 最大内存使用 512MB
          memory: 512M
          # 最大 CPU 使用 0.5 核心
          cpus: '0.5'
        reservations:
          # 保留内存 128MB
          memory: 128M
          # 保留 CPU 0.1 核心
          cpus: '0.1'
    
    # 网络配置
    networks:
      - clashlink-network
    
    # 依赖服务（如果有的话）
    # depends_on:
    #   - redis
    #   - postgres
    
    # 标签（用于管理和监控）
    labels:
      - "app=clashlink"
      - "version=${VERSION:-1.0.0}"
      - "maintainer=your-email@example.com"

# 网络配置
networks:
  clashlink-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 数据卷配置（可选，用于命名卷）
volumes:
  # 如果不想使用绑定挂载，可以使用命名卷
  clashlink-data:
    driver: local
  clashlink-subscriptions:
    driver: local
  clashlink-logs:
    driver: local
